# RTAB-Map SLAM Parameters Configuration for TurtleBot2i simulation
# This YAML file contains the configuration parameters for the RTAB-Map SLAM node.
# Each parameter is explained with comments to help understand their usage and purpose.
rtabmap: # name of the executable package
  ros__parameters:
    # PoC parameters
    database_path: "~/.ros/rtabmap.db" # Path to the RTAB-Map database file.
    frame_id: "base_footprint" # Fixed reference frame ID, typically associated with the sensor.
    wait_for_transform: 0.2 # Maximum wait time for a TF transformation before failing.
    subscribe_depth: false # Subscribe to the depth image topic.
    subscribe_scan: true # Subscribe to the laser scan topic.
    # map_negative_poses_ignored: true # Ignore negative poses in the map.
    use_action_for_goal: false # Use actions to send goals to move_base.
    odom_topic: "/odom" # Topic from which odometry is received.
    odom_frame_id: "" # Odometry frame ID; if empty, use the topic.
    odom_tf_linear_variance: 0.001 # TF odometry linear variance. Default value 0.001.
    odom_tf_angular_variance: 0.001 # TF odometry angular variance. Default value 0.001.
    #
    RGBD/ProximityBySpace: "true" # Enable loop closure detection based on spatial proximity.
    RGBD/OptimizeFromGraphEnd: "true" # Optimize graph starting from the end.
    RGBD/AngularUpdate: "0.05" # Angular update threshold for map updates.
    RGBD/LinearUpdate: "0.05" # Linear update threshold for map updates.
    RGBD/ProximityPathMaxNeighbors: "100" # Maximum number of neighbors to consider in proximity search.
    RGBD/NeighborLinkRefining: "true"  # Refine links between neighboring nodes.
    RGBD/MarkerDetection: "false" # Enable or disable marker detection.
    RGBD/ScanMatching: "true" # Enable scan matching.
    RGBD/LoopClosureHypothesis: "true" # Enable loop closure hypothesis.
    RGBD/MaxDepth: "8.0"  # Max depth for Astra Pro Plus.
    Mem/CompressionRGBDImages: "false" # Use full RGBD images for SLAM.
    Mem/STMSize: "60" # Size of short-term memory for loop closure.
    Mem/LTMSize: "0" # Size of long-term memory for loop closure.
    #
    #
    Kp/MaxDepth: "4.0" # Maximum depth considered for keypoints.
    Reg/Strategy: "2" # Registration strategy used for localization.
    Reg/Force3DoF: "false" # Force mapping to be in 3 DoF (2D + rotation around Z).
        #
    Icp/Strategy: "1" # ICP implementation: 0=Point Cloud Library, 1=libpointmatcher, 2=CCCoreLib (CloudCompare).
    Icp/CorrespondenceRatio: "0.3" # Correspondence ratio for ICP algorithm.
    Icp/VoxelSize: "0.02" # Voxel size for point cloud filtering in ICP.
    Icp/MaxCorrespondenceDistance: "0.1" # Maximum correspondence distance for ICP.
    Vis/MinInliers: "15" # Minimum number of inliers for a valid correspondence.
    Vis/InlierDistance: "0.1" # Maximum distance to consider inliers in meters.
    Rtabmap/TimeThr: "0" # Time threshold for loop closure.
    Mem/RehearsalSimilarity: '0.30' # Similarity threshold to avoid redundancy in memory.
    Mem/IncrementalMemory: "true" # If true, memory is incremented with new nodes.
    Mem/InitWMWithAllNodes: "true" # If true, initialize working memory with all nodes.
    Mem/LaserScanVoxelSize: "0" # Voxel size for laser scan filtering when creating a signature.
    Mem/LaserScanDownsampleStepSize: "0" # Downsample step size for laser scans when creating a signature.
    Mem/UseOdomGPU: "true" # Use GPU for odometry.
    GridGlobal/MinSize: "10" # Minimum size for the global grid.
    Odom/Strategy: "5" # Odometry strategy (e.g., 0 for visual odometry, 5 for ORB-SLAM2).
    Odom/GuessMotion: "true" # Use robot odometry to guess initial motion.
    Odom/LidarScan: "true" # Enable lidar scan integration.
    Odom/ResetCountdown: "10" # Reset odometry estimation if synchronization is lost for the specified number of frames.
    Odom/GuessFrameId: "base_link" # Frame ID used for guessing the next pose.
    Odom/GuessMinTranslation: "0.02" # Threshold for using the guessing mechanism for the next odometry pose.
    Odom/GuessMinRotation: "0.01" # Threshold for using the guessing mechanism for the next odometry pose.
    Odom/SyncParams: "true" # Synchronize odometry parameters for consistent data fusion.
    g2o/Solver: "0" # Solver used for optimization.
    Optimizer/Strategy: "1" # Graph optimization strategy.
    Grid/Sensor: "2" # Sensor used for grid data.
    Grid/RangeMin: "0.2"  # Minimum range for the grid/laser sensor.
    Grid/RangeMax: "8.0" # Maximum range for the grid/laser sensor.
    Grid/ScanDecimation: "2" # Decimation of laser scans before creating the point cloud.
    Grid/CellSize: "0.05" # Cell size for 2D map.
    Grid/FromDepth: "true" # Generate grid from RGBD.
    Grid/FromLidar: "true" # Generate grid from Lidar.
    #
    latch: true  # If true, keeps the last published message until a new subscriber connects.
    map_filter_radius: 0.0  # Radius for the map filter used to process mapping data.
    map_filter_angle: 30.0  # Angle for the map filter used to reduce mapping data.
    map_cleanup: true  # If true, performs map cleanup by removing unnecessary data.
    map_always_update: false  # If true, the map is always updated with each new sensor reading.
    map_empty_ray_tracing: true  # If true, performs ray tracing in uncovered areas.
    cloud_output_voxelized: true  # If true, the point cloud output is voxelized to reduce data size.
    cloud_subtract_filtering: false  # If true, filters point clouds by subtracting unchanged points.
    cloud_subtract_filtering_min_neighbors: 2  # Minimum number of neighbors for filtering points in the subtracted cloud.
    octomap_tree_depth: 16  # Depth of the OctoMap tree used to structure 3D map data.
    map_frame_id: "map"  # Reference frame ID for the generated map.
    log_to_rosout_level: 4  # Log level sent to rosout.
    initial_pose: ""  # Initial pose of the robot, if provided.
    tf_delay: 0.05  # Time delay for TF transformation.
    tf_tolerance: 0.1  # Time tolerance for TF transformation.
    odom_sensor_sync: false  # If true, synchronize odometry with the sensor.
    pub_loc_pose_only_when_localizing: false  # Publish local pose only when the robot is localizing.
    gen_scan: false  # If true, generate scan data from the sensors.
    gen_depth: false  # If true, generate depth images from the sensors.
    detection_rate: 3.0  # Detection rate for the mapping process.
    subscribe_rgb: false  # Subscribe to the RGB image topic.
    subscribe_stereo: false  # Subscribe to stereo image topics.
    subscribe_rgbd: true  # Subscribe to RGB-D image topics.
    subscribe_rgbd_cameras: 1  # Number of RGB-D cameras to subscribe to.
    subscribe_sensor_data: false  # Subscribe to the sensor data topic.
    subscribe_odom_info: true  # Subscribe to the odometry information topic.
    subscribe_user_data: false  # Subscribe to the user data topic.
    subscribe_scan_cloud: false  # Subscribe to the scan cloud topic.
    subscribe_scan_descriptor: false  # Subscribe to the scan descriptor topic.
    scan_topic: "/lidar_scan" # Topic for laser scans.
    queue_size: 40  # Queue size for topic messages.
    qos_image: 2  # QoS for image topics.
    qos_camera_info: 2  # QoS for camera information topics.
    qos_scan: 2  # QoS for scan topics.
    qos_odom: 2  # QoS for odometry topics.
    qos_user_data: 2  # QoS for user data topics.
    approx_sync: True  # If true, use approximate synchronization for input topics.